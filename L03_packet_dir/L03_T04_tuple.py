# Тема 4. Тип данных КОРТЕЖ (tuple)------------------------
# ------------------------------------------
print('--------------------------------------Тема 4. Тип данных КОРТЕЖ (tuple)----------------------------------------')
print('--------------------------------------------------------------------------------------------------------------')
print('')
# Раздел. Базовые ПРАВИЛА по КОРТЕЖАМ:
print('----------------------------------------------Правила:--------------------------------------------------------')
print('КОРТЕЖИ - НЕ ИЗМЕНЯЕМЫЕ СПИСКИ, элементы кортежа разделяются запятыми')
print('Элементами кортежа могут быть любые объекты, в том числе и сами кортежы')
print('Выборку из кортежа можно выполнить так: [x**2|for x in num|if x>0]')
print('Описание выборки из кортежа: [Операция с найденными(x)| Переменная(x) и множиство|Условие выбора(x)]')
print('ЕСЛИ КОРТЕЖ: Tuple_test1 = (0,1,2,3,4,"F5"), ТО АДРЕСАЦИЯ ОБЪЕКТОВ КОРТЕЖА ВЫГЛЯДИТ ТАК:')
print('--------------------------------')
print('[  0][  1][  2][  3][  4][ "F5"]')
print(' 0 :  1 :  2 :  3 :  4 :  5     ')
print('--------------------------------')
Tuple_test1 = (0, 1, 2, 3, 4, "F5")
print(type(Tuple_test1), Tuple_test1)
for x1 in range(6):
    x2 = 6 - x1
    sp1 = '   '
    sp2 = '  '
    if (x1 == 0 or x1 == 5): sp2 = ''
    if x1 == 5: sp1 = '  '
    if x1 == 5: sp2 = sp2 + '  '
    if x1 == 1: sp2 = sp2 + '    '
    for i in range(6 - len(Tuple_test1[0:x1])):
        if x1 != 1:
            sp2 = sp2 + "   "
        else:
            sp2 = sp2 + "  "
    print('Tuple_test1[', x1, '] =', Tuple_test1[x1], sp1 + 'Tuple_test1[', 0, ':', x1, '] =', Tuple_test1[0:x1],
          sp2 + '  Tuple_test1[', x2, ':', 6, '] =', Tuple_test1[x2:6])
print('                        Tuple_test1[ 0 : 6 ] =', Tuple_test1[0:6], ' Tuple_test1[ 0 : 6 ] =', Tuple_test1[0:6])
print('**************************************************************************************************************')
print('')
# Раздел. Инициализация КОРТЕЖА
print('Раздел. Инициализация КОРТЕЖА.')
print('')
# 1 Вариант - инициализация КОРТЕЖА "круглыми" скобками: Tuple('A0',1,2,3)
print('----------------------------------------------Описание:-------------------------------------------------------')
print('1 Инициализация КОРТЕЖА "круглыми" скобками: Tuple("A0",1,2,3)')
print('--------------------------------------------Python Script:----------------------------------------------------')
print('temp_tuple = ("A0",1,2,3)')
print('print(type(temp_tuple),temp_tuple)')
print('----------------------------------------------Результат:------------------------------------------------------')
temp_tuple = ('A0', 1, 2, 3)
print(type(temp_tuple), temp_tuple)
print('**************************************************************************************************************')
print('')
# 2 Вариант - инициализация КОРТЕЖА "круглыми" скобками из существующего списка: Tuple(List["A0",1,2,3])
print('----------------------------------------------Описание:-------------------------------------------------------')
print('1 Инициализация КОРТЕЖА "круглыми" скобками из существующего списка: Tuple(List["A0",1,2,3])')
print('--------------------------------------------Python Script:----------------------------------------------------')
print('temp_list = ["A0",1,2,3]')
print('temp_tuple = tuple(temp_list)')
print('print(type(temp_tuple),temp_tuple)')
print('----------------------------------------------Результат:------------------------------------------------------')
temp_list = ["A0", 1, 2, 3]
temp_tuple = tuple(temp_list)
print(type(temp_tuple), temp_tuple)
print('**************************************************************************************************************')
print('')
# Раздел. Обращения к элементам кортежа
print('')
# 1 Обращения к элементу кортежа по индексу элемента
print('----------------------------------------------Описание:-------------------------------------------------------')
print('1 Обращения к элементу кортежа по интексу элемента')
print('--------------------------------------------Python Script:----------------------------------------------------')
print('print(temp_tuple[0])')
print('----------------------------------------------Результат:------------------------------------------------------')
print(temp_tuple[0])
print('**************************************************************************************************************')
print('')
# 2 Обращения к элементам кортежа по индексу элементов - перебор в цикле
print('----------------------------------------------Описание:-------------------------------------------------------')
print('2 Обращения к элементам кортежа по интексу элементов - перебор в цикле')
print('--------------------------------------------Python Script:----------------------------------------------------')
print('for i in range(len(temp_tuple)):')
print('print(temp_tuple[i])')
print('----------------------------------------------Результат:------------------------------------------------------')
for i in range(len(temp_tuple)):
    print(temp_tuple[i])
print('**************************************************************************************************************')
print('')

# temp_tuple[0] = 100

# Функции с кортежами
# ----- аналогично
# Операции с кортежами
# ----- аналогично
# Методы
# ----- аналогично

temp_list = [1, 2, 3]
temp_tuple = (1, 2, 3)

print('объём занимаемой памяти списка temp_list = [1,2,3] в ОЗУ:', temp_list.__sizeof__(), 'bytes')
print('объём занимаемой памяти кортежа temp_tuple = (1,2,3) в ОЗУ:', temp_tuple.__sizeof__(), 'bytes')
