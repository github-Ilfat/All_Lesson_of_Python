# *************************************************"ИГРА В КОСТИ"******************************************************
# Комп загадывает пару чисел, генератор имитирующий бросков 2 кубиков, количество бросков, совпадение по условию
# ПЛАН создания КЛАССА ("чертёж объекта") в Python:
#
# ОБЪЕКТ
# ---------------------------------------------------------------------------------------------------------------------
# АТРИБУТЫ                                      МЕТОДЫ
# (ПЕРЕМЕННЫЕ КЛАССА)                           (ФУНКЦИИ КЛАССА, могут быть "грязными", т.е. могут изм. зн. атрибутов)
# -------------------------------------         -----------------------------------------------------------------------
# Переключатель режима игры.                    # Инициализация параметров игры.
# 2 Числа, загаданные "компьютером".            # Подключение генератора случайных чисел random для роли "компьютер".
# 2 Числа, загаданные "игроком".                # Подключение генератора случайных чисел random для роли "игрок".
#                                               # Выбор режима игры.
#----------------------------------------------------------------------------------------------------------------------

import random

# по соглашению программистов, имена классов пишутся с Большой буквы - Dice (Кости)
class Dice:
    # Инициалицирующий МЕТОД (специальный метод с "__")
    # Инициализация атрибутов игры (N - количество бросков "throw_num" )
    def __init__(self,sw):
        self.id_return = 0 # Поля читаются и записываются через "self" - указывает на текущий экземпляр класса
        self.switch = sw # Режим игры

    # Обычный метод объекта(метод экземпляра класса),
    # имеет те же правила наименования, что и обычные функции:
    def set_hidden_numbers(self):
        # Числа, загаданные компьютером (random от 1 до 6).
        self._hidden_num_1 = random.randint(1,6) # инкапсуляция(скрытие значений параметра "_hidden_num_1", "_земля")
        self._hidden_num_2 = random.randint(1,6) # инкапсуляция(скрытие значений параметра "_hidden_num_2", "_земля")

    # имитация бросания костей (кубиков со сторанами указывающими на цифры от 1 до 6).
    def throw_dices(self):
        self.dice_1 = random.randint(1,6)
        self.dice_2 = random.randint(1,6)
        # условия совпадения брошенных костей и загаданных компьютером, индексация результата:
        # совпала первая кость
#----------------------------------------------------------------------------------------------------------------------

# Проверка класса (посмотрим, что получилось):
print('# **************"ИГРА В КОСТИ"******************')
if __name__ == '__main__':
    # Инициализация бросков
    N=8
    #sw=0 # Режим игры: только равенство сумм костей
    sw=1 # Режим игры: только полное совпадение 2 костей ("один в один", равенство сумм костей)
    #sw=2 # Режим игры: раздельное совпадение по 1 кости (с возможным совпадением "один в один", равенством сумм костей)
    for i in range(1,N):
        dice_game = Dice(sw) # запуск с указанием количества попыток
        dice_game.set_hidden_numbers()
        dice_game.throw_dices()
        chk=0
        print('#', i, '- бросок игрока:', dice_game.dice_1, dice_game.dice_2)
        print('# - числа компьютера:', dice_game._hidden_num_1,dice_game._hidden_num_2) # вывод
        # условия совпадения брошенных костей и загаданных компьютером, индексация результата:
        if sw==1 and (dice_game.dice_1 == dice_game._hidden_num_1 and dice_game.dice_2 == dice_game._hidden_num_1):
            print('# результат: есть полное совпадение цифр (1-6)!!!')
            chk=1
        if sw==2 and (dice_game.dice_1 == dice_game._hidden_num_1 or dice_game.dice_1 == dice_game._hidden_num_2 \
                or dice_game.dice_2 == dice_game._hidden_num_1 or dice_game.dice_2 == dice_game._hidden_num_2):
            print('# результат: есть раздельное совпадение цифр (1-6)')
            chk=1
        if ((dice_game.dice_1 + dice_game.dice_2) == (dice_game._hidden_num_1 + dice_game._hidden_num_2)):
            print('# результат: совпадение сумм!!!!!!')
            chk=1
        if chk==0:
            print('# результат: нет ни одного совпадения.')
    print('# **********************************************')
    print('# **************Игра закончена!*****************')
#----------------------------------------------------------------------------------------------------------------------

# **************"ИГРА В КОСТИ"******************
# 1 - бросок игрока: 3 3
# - числа компьютера: 5 2
# результат: нет ни одного совпадения.
# 2 - бросок игрока: 2 6
# - числа компьютера: 3 4
# результат: нет ни одного совпадения.
# 3 - бросок игрока: 6 5
# - числа компьютера: 4 4
# результат: нет ни одного совпадения.
# 4 - бросок игрока: 6 6
# - числа компьютера: 2 1
# результат: нет ни одного совпадения.
# 5 - бросок игрока: 2 1
# - числа компьютера: 2 1
# результат: есть совпадение цифр (1-6)
# результат: совпадение сумм!!!!!!
# 6 - бросок игрока: 2 2
# - числа компьютера: 6 3
# результат: нет ни одного совпадения.
# 7 - бросок игрока: 2 6
# - числа компьютера: 3 2
# результат: есть совпадение цифр (1-6)
# **********************************************
# **************Игра закончена!*****************

# Process finished with exit code 0
